# Makefile.in generated by automake 1.13.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am,v 1.6 2004/11/09 07:05:07 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#
# Process this file with automake to produce a Makefile.in script.

# $Id: Makefile.am.common,v 1.3 2004/01/03 20:31:00 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(top_srcdir)/Makefile.am.common $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am
@INSTALL_SAMPLES_TRUE@bin_PROGRAMS = $(am__EXEEXT_1)
@INSTALL_SAMPLES_FALSE@noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = sample
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = arp$(EXEEXT) cdp$(EXEEXT) dhcp_discover$(EXEEXT) \
	get_addr$(EXEEXT) icmp_timestamp$(EXEEXT) \
	icmp_unreach$(EXEEXT) ieee$(EXEEXT) isl$(EXEEXT) ntp$(EXEEXT) \
	ospf_hello$(EXEEXT) ospf_lsa$(EXEEXT) ping_of_death$(EXEEXT) \
	stp$(EXEEXT) synflood$(EXEEXT) tcp1$(EXEEXT) tcp2$(EXEEXT) \
	udp1$(EXEEXT) udp2$(EXEEXT) synflood6$(EXEEXT) \
	icmp6_echoreq$(EXEEXT) icmp6_unreach$(EXEEXT) \
	icmp_echo_cq$(EXEEXT) smurf$(EXEEXT) dot1x$(EXEEXT) \
	dns$(EXEEXT) rpc_tcp$(EXEEXT) rpc_udp$(EXEEXT) mpls$(EXEEXT) \
	icmp_timeexceed$(EXEEXT) fddi_tcp1$(EXEEXT) fddi_tcp2$(EXEEXT) \
	tring_tcp1$(EXEEXT) tring_tcp2$(EXEEXT) icmp_redirect$(EXEEXT) \
	bgp4_hdr$(EXEEXT) bgp4_open$(EXEEXT) bgp4_update$(EXEEXT) \
	bgp4_notification$(EXEEXT) gre$(EXEEXT) \
	synflood6_frag$(EXEEXT) tftp$(EXEEXT) ip_link$(EXEEXT) \
	ip_raw$(EXEEXT) sebek$(EXEEXT) hsrp$(EXEEXT) \
	test_ipv4$(EXEEXT) test_ipv6_icmpv4$(EXEEXT) \
	test_ipv4_options$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_arp_OBJECTS = arp.$(OBJEXT)
arp_OBJECTS = $(am_arp_OBJECTS)
arp_LDADD = $(LDADD)
arp_DEPENDENCIES = $(top_builddir)/src/libnet.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_bgp4_hdr_OBJECTS = bgp4_hdr.$(OBJEXT)
bgp4_hdr_OBJECTS = $(am_bgp4_hdr_OBJECTS)
bgp4_hdr_LDADD = $(LDADD)
bgp4_hdr_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_notification_OBJECTS = bgp4_notification.$(OBJEXT)
bgp4_notification_OBJECTS = $(am_bgp4_notification_OBJECTS)
bgp4_notification_LDADD = $(LDADD)
bgp4_notification_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_open_OBJECTS = bgp4_open.$(OBJEXT)
bgp4_open_OBJECTS = $(am_bgp4_open_OBJECTS)
bgp4_open_LDADD = $(LDADD)
bgp4_open_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_update_OBJECTS = bgp4_update.$(OBJEXT)
bgp4_update_OBJECTS = $(am_bgp4_update_OBJECTS)
bgp4_update_LDADD = $(LDADD)
bgp4_update_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_cdp_OBJECTS = cdp.$(OBJEXT)
cdp_OBJECTS = $(am_cdp_OBJECTS)
cdp_LDADD = $(LDADD)
cdp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dhcp_discover_OBJECTS = dhcp_discover.$(OBJEXT)
dhcp_discover_OBJECTS = $(am_dhcp_discover_OBJECTS)
dhcp_discover_LDADD = $(LDADD)
dhcp_discover_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dns_OBJECTS = dns.$(OBJEXT)
dns_OBJECTS = $(am_dns_OBJECTS)
dns_LDADD = $(LDADD)
dns_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dot1x_OBJECTS = dot1x.$(OBJEXT)
dot1x_OBJECTS = $(am_dot1x_OBJECTS)
dot1x_LDADD = $(LDADD)
dot1x_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_fddi_tcp1_OBJECTS = fddi_tcp1.$(OBJEXT)
fddi_tcp1_OBJECTS = $(am_fddi_tcp1_OBJECTS)
fddi_tcp1_LDADD = $(LDADD)
fddi_tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_fddi_tcp2_OBJECTS = fddi_tcp2.$(OBJEXT)
fddi_tcp2_OBJECTS = $(am_fddi_tcp2_OBJECTS)
fddi_tcp2_LDADD = $(LDADD)
fddi_tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_get_addr_OBJECTS = get_addr.$(OBJEXT)
get_addr_OBJECTS = $(am_get_addr_OBJECTS)
get_addr_LDADD = $(LDADD)
get_addr_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_gre_OBJECTS = gre.$(OBJEXT)
gre_OBJECTS = $(am_gre_OBJECTS)
gre_LDADD = $(LDADD)
gre_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_hsrp_OBJECTS = hsrp.$(OBJEXT)
hsrp_OBJECTS = $(am_hsrp_OBJECTS)
hsrp_LDADD = $(LDADD)
hsrp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp6_echoreq_OBJECTS = icmp6_echoreq.$(OBJEXT)
icmp6_echoreq_OBJECTS = $(am_icmp6_echoreq_OBJECTS)
icmp6_echoreq_LDADD = $(LDADD)
icmp6_echoreq_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp6_unreach_OBJECTS = icmp6_unreach.$(OBJEXT)
icmp6_unreach_OBJECTS = $(am_icmp6_unreach_OBJECTS)
icmp6_unreach_LDADD = $(LDADD)
icmp6_unreach_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_echo_cq_OBJECTS = icmp_echo_cq.$(OBJEXT)
icmp_echo_cq_OBJECTS = $(am_icmp_echo_cq_OBJECTS)
icmp_echo_cq_LDADD = $(LDADD)
icmp_echo_cq_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_redirect_OBJECTS = icmp_redirect.$(OBJEXT)
icmp_redirect_OBJECTS = $(am_icmp_redirect_OBJECTS)
icmp_redirect_LDADD = $(LDADD)
icmp_redirect_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_timeexceed_OBJECTS = icmp_timeexceed.$(OBJEXT)
icmp_timeexceed_OBJECTS = $(am_icmp_timeexceed_OBJECTS)
icmp_timeexceed_LDADD = $(LDADD)
icmp_timeexceed_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_timestamp_OBJECTS = icmp_timestamp.$(OBJEXT)
icmp_timestamp_OBJECTS = $(am_icmp_timestamp_OBJECTS)
icmp_timestamp_LDADD = $(LDADD)
icmp_timestamp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_unreach_OBJECTS = icmp_unreach.$(OBJEXT)
icmp_unreach_OBJECTS = $(am_icmp_unreach_OBJECTS)
icmp_unreach_LDADD = $(LDADD)
icmp_unreach_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ieee_OBJECTS = ieee.$(OBJEXT)
ieee_OBJECTS = $(am_ieee_OBJECTS)
ieee_LDADD = $(LDADD)
ieee_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ip_link_OBJECTS = ip_link.$(OBJEXT)
ip_link_OBJECTS = $(am_ip_link_OBJECTS)
ip_link_LDADD = $(LDADD)
ip_link_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ip_raw_OBJECTS = ip_raw.$(OBJEXT)
ip_raw_OBJECTS = $(am_ip_raw_OBJECTS)
ip_raw_LDADD = $(LDADD)
ip_raw_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_isl_OBJECTS = isl.$(OBJEXT)
isl_OBJECTS = $(am_isl_OBJECTS)
isl_LDADD = $(LDADD)
isl_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_mpls_OBJECTS = mpls.$(OBJEXT)
mpls_OBJECTS = $(am_mpls_OBJECTS)
mpls_LDADD = $(LDADD)
mpls_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ntp_OBJECTS = ntp.$(OBJEXT)
ntp_OBJECTS = $(am_ntp_OBJECTS)
ntp_LDADD = $(LDADD)
ntp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ospf_hello_OBJECTS = ospf_hello.$(OBJEXT)
ospf_hello_OBJECTS = $(am_ospf_hello_OBJECTS)
ospf_hello_LDADD = $(LDADD)
ospf_hello_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ospf_lsa_OBJECTS = ospf_lsa.$(OBJEXT)
ospf_lsa_OBJECTS = $(am_ospf_lsa_OBJECTS)
ospf_lsa_LDADD = $(LDADD)
ospf_lsa_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ping_of_death_OBJECTS = ping_of_death.$(OBJEXT)
ping_of_death_OBJECTS = $(am_ping_of_death_OBJECTS)
ping_of_death_LDADD = $(LDADD)
ping_of_death_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_rpc_tcp_OBJECTS = rpc_tcp.$(OBJEXT)
rpc_tcp_OBJECTS = $(am_rpc_tcp_OBJECTS)
rpc_tcp_LDADD = $(LDADD)
rpc_tcp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_rpc_udp_OBJECTS = rpc_udp.$(OBJEXT)
rpc_udp_OBJECTS = $(am_rpc_udp_OBJECTS)
rpc_udp_LDADD = $(LDADD)
rpc_udp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_sebek_OBJECTS = sebek.$(OBJEXT)
sebek_OBJECTS = $(am_sebek_OBJECTS)
sebek_LDADD = $(LDADD)
sebek_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_smurf_OBJECTS = smurf.$(OBJEXT)
smurf_OBJECTS = $(am_smurf_OBJECTS)
smurf_LDADD = $(LDADD)
smurf_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_stp_OBJECTS = stp.$(OBJEXT)
stp_OBJECTS = $(am_stp_OBJECTS)
stp_LDADD = $(LDADD)
stp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood_OBJECTS = synflood.$(OBJEXT)
synflood_OBJECTS = $(am_synflood_OBJECTS)
synflood_LDADD = $(LDADD)
synflood_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood6_OBJECTS = synflood6.$(OBJEXT)
synflood6_OBJECTS = $(am_synflood6_OBJECTS)
synflood6_LDADD = $(LDADD)
synflood6_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood6_frag_OBJECTS = synflood6_frag.$(OBJEXT)
synflood6_frag_OBJECTS = $(am_synflood6_frag_OBJECTS)
synflood6_frag_LDADD = $(LDADD)
synflood6_frag_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tcp1_OBJECTS = tcp1.$(OBJEXT)
tcp1_OBJECTS = $(am_tcp1_OBJECTS)
tcp1_LDADD = $(LDADD)
tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tcp2_OBJECTS = tcp2.$(OBJEXT)
tcp2_OBJECTS = $(am_tcp2_OBJECTS)
tcp2_LDADD = $(LDADD)
tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv4_OBJECTS = test_ipv4.$(OBJEXT)
test_ipv4_OBJECTS = $(am_test_ipv4_OBJECTS)
test_ipv4_LDADD = $(LDADD)
test_ipv4_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv4_options_OBJECTS = test_ipv4_options.$(OBJEXT)
test_ipv4_options_OBJECTS = $(am_test_ipv4_options_OBJECTS)
test_ipv4_options_LDADD = $(LDADD)
test_ipv4_options_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv6_icmpv4_OBJECTS = test_ipv6_icmpv4.$(OBJEXT)
test_ipv6_icmpv4_OBJECTS = $(am_test_ipv6_icmpv4_OBJECTS)
test_ipv6_icmpv4_LDADD = $(LDADD)
test_ipv6_icmpv4_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tftp_OBJECTS = tftp.$(OBJEXT)
tftp_OBJECTS = $(am_tftp_OBJECTS)
tftp_LDADD = $(LDADD)
tftp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tring_tcp1_OBJECTS = tring_tcp1.$(OBJEXT)
tring_tcp1_OBJECTS = $(am_tring_tcp1_OBJECTS)
tring_tcp1_LDADD = $(LDADD)
tring_tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tring_tcp2_OBJECTS = tring_tcp2.$(OBJEXT)
tring_tcp2_OBJECTS = $(am_tring_tcp2_OBJECTS)
tring_tcp2_LDADD = $(LDADD)
tring_tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_udp1_OBJECTS = udp1.$(OBJEXT)
udp1_OBJECTS = $(am_udp1_OBJECTS)
udp1_LDADD = $(LDADD)
udp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_udp2_OBJECTS = udp2.$(OBJEXT)
udp2_OBJECTS = $(am_udp2_OBJECTS)
udp2_LDADD = $(LDADD)
udp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) \
	$(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) \
	$(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) \
	$(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) \
	$(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) \
	$(hsrp_SOURCES) $(icmp6_echoreq_SOURCES) \
	$(icmp6_unreach_SOURCES) $(icmp_echo_cq_SOURCES) \
	$(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) \
	$(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) \
	$(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) \
	$(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) \
	$(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) \
	$(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) \
	$(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) \
	$(synflood_SOURCES) $(synflood6_SOURCES) \
	$(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4_options_SOURCES) \
	$(test_ipv6_icmpv4_SOURCES) $(tftp_SOURCES) \
	$(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) $(udp1_SOURCES) \
	$(udp2_SOURCES)
DIST_SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) \
	$(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) \
	$(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) \
	$(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) \
	$(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) \
	$(hsrp_SOURCES) $(icmp6_echoreq_SOURCES) \
	$(icmp6_unreach_SOURCES) $(icmp_echo_cq_SOURCES) \
	$(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) \
	$(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) \
	$(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) \
	$(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) \
	$(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) \
	$(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) \
	$(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) \
	$(synflood_SOURCES) $(synflood6_SOURCES) \
	$(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4_options_SOURCES) \
	$(test_ipv6_icmpv4_SOURCES) $(tftp_SOURCES) \
	$(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) $(udp1_SOURCES) \
	$(udp2_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADDITIONAL_LIBS = @ADDITIONAL_LIBS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENDIANESS = @ENDIANESS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_PACKET_SOCKET = @HAVE_PACKET_SOCKET@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBNET_CONFIG_CFLAGS = @LIBNET_CONFIG_CFLAGS@
LIBNET_CONFIG_DEFINES = @LIBNET_CONFIG_DEFINES@
LIBNET_CONFIG_LIBS = @LIBNET_CONFIG_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign no-dependencies
DISTCLEANFILES = *~
ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = -I$(top_srcdir)/include
samples = arp cdp dhcp_discover get_addr icmp_timestamp icmp_unreach \
                  ieee isl ntp ospf_hello ospf_lsa ping_of_death stp synflood \
                  tcp1 tcp2 udp1 udp2 synflood6 \
                  icmp6_echoreq \
                  icmp6_unreach \
                  icmp_echo_cq \
                  smurf dot1x dns rpc_tcp rpc_udp mpls icmp_timeexceed \
                  fddi_tcp1 fddi_tcp2 tring_tcp1 tring_tcp2 icmp_redirect \
                  bgp4_hdr bgp4_open bgp4_update bgp4_notification gre \
                  synflood6_frag tftp ip_link ip_raw sebek hsrp \
                  test_ipv4 test_ipv6_icmpv4 test_ipv4_options

arp_SOURCES = arp.c
cdp_SOURCES = cdp.c
dot1x_SOURCES = dot1x.c
dhcp_discover_SOURCES = dhcp_discover.c
dns_SOURCES = dns.c
fddi_tcp1_SOURCES = fddi_tcp1.c
fddi_tcp2_SOURCES = fddi_tcp2.c
tring_tcp1_SOURCES = tring_tcp1.c
tring_tcp2_SOURCES = tring_tcp2.c
get_addr_SOURCES = get_addr.c
icmp_echo_cq_SOURCES = icmp_echo_cq.c
icmp_redirect_SOURCES = icmp_redirect.c
icmp_timestamp_SOURCES = icmp_timestamp.c
icmp_timeexceed_SOURCES = icmp_timeexceed.c
icmp_unreach_SOURCES = icmp_unreach.c
ieee_SOURCES = ieee.c
isl_SOURCES = isl.c
ntp_SOURCES = ntp.c
ospf_hello_SOURCES = ospf_hello.c
ospf_lsa_SOURCES = ospf_lsa.c
ping_of_death_SOURCES = ping_of_death.c
mpls_SOURCES = mpls.c
rpc_tcp_SOURCES = rpc_tcp.c
rpc_udp_SOURCES = rpc_udp.c
stp_SOURCES = stp.c
synflood_SOURCES = synflood.c
tcp1_SOURCES = tcp1.c
tcp2_SOURCES = tcp2.c
tftp_SOURCES = tftp.c
udp1_SOURCES = udp1.c
udp2_SOURCES = udp2.c
icmp6_echoreq_SOURCES = icmp6_echoreq.c
icmp6_unreach_SOURCES = icmp6_unreach.c
smurf_SOURCES = smurf.c
synflood6_SOURCES = synflood6.c
synflood6_frag_SOURCES = synflood6_frag.c
bgp4_hdr_SOURCES = bgp4_hdr.c
bgp4_open_SOURCES = bgp4_open.c
bgp4_update_SOURCES = bgp4_update.c
bgp4_notification_SOURCES = bgp4_notification.c
gre_SOURCES = gre.c
ip_raw_SOURCES = ip_raw.c
ip_link_SOURCES = ip_link.c
sebek_SOURCES = sebek.c
hsrp_SOURCES = hsrp.c
test_ipv4_SOURCES = test_ipv4.c
test_ipv4_options_SOURCES = test_ipv4_options.c
test_ipv6_icmpv4_SOURCES = test_ipv6_icmpv4.c
EXTRA_DIST = libnet_test.h
LDADD = $(top_builddir)/src/libnet.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign sample/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign sample/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.am.common:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

arp$(EXEEXT): $(arp_OBJECTS) $(arp_DEPENDENCIES) $(EXTRA_arp_DEPENDENCIES) 
	@rm -f arp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(arp_OBJECTS) $(arp_LDADD) $(LIBS)

bgp4_hdr$(EXEEXT): $(bgp4_hdr_OBJECTS) $(bgp4_hdr_DEPENDENCIES) $(EXTRA_bgp4_hdr_DEPENDENCIES) 
	@rm -f bgp4_hdr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bgp4_hdr_OBJECTS) $(bgp4_hdr_LDADD) $(LIBS)

bgp4_notification$(EXEEXT): $(bgp4_notification_OBJECTS) $(bgp4_notification_DEPENDENCIES) $(EXTRA_bgp4_notification_DEPENDENCIES) 
	@rm -f bgp4_notification$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bgp4_notification_OBJECTS) $(bgp4_notification_LDADD) $(LIBS)

bgp4_open$(EXEEXT): $(bgp4_open_OBJECTS) $(bgp4_open_DEPENDENCIES) $(EXTRA_bgp4_open_DEPENDENCIES) 
	@rm -f bgp4_open$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bgp4_open_OBJECTS) $(bgp4_open_LDADD) $(LIBS)

bgp4_update$(EXEEXT): $(bgp4_update_OBJECTS) $(bgp4_update_DEPENDENCIES) $(EXTRA_bgp4_update_DEPENDENCIES) 
	@rm -f bgp4_update$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bgp4_update_OBJECTS) $(bgp4_update_LDADD) $(LIBS)

cdp$(EXEEXT): $(cdp_OBJECTS) $(cdp_DEPENDENCIES) $(EXTRA_cdp_DEPENDENCIES) 
	@rm -f cdp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cdp_OBJECTS) $(cdp_LDADD) $(LIBS)

dhcp_discover$(EXEEXT): $(dhcp_discover_OBJECTS) $(dhcp_discover_DEPENDENCIES) $(EXTRA_dhcp_discover_DEPENDENCIES) 
	@rm -f dhcp_discover$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dhcp_discover_OBJECTS) $(dhcp_discover_LDADD) $(LIBS)

dns$(EXEEXT): $(dns_OBJECTS) $(dns_DEPENDENCIES) $(EXTRA_dns_DEPENDENCIES) 
	@rm -f dns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dns_OBJECTS) $(dns_LDADD) $(LIBS)

dot1x$(EXEEXT): $(dot1x_OBJECTS) $(dot1x_DEPENDENCIES) $(EXTRA_dot1x_DEPENDENCIES) 
	@rm -f dot1x$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dot1x_OBJECTS) $(dot1x_LDADD) $(LIBS)

fddi_tcp1$(EXEEXT): $(fddi_tcp1_OBJECTS) $(fddi_tcp1_DEPENDENCIES) $(EXTRA_fddi_tcp1_DEPENDENCIES) 
	@rm -f fddi_tcp1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fddi_tcp1_OBJECTS) $(fddi_tcp1_LDADD) $(LIBS)

fddi_tcp2$(EXEEXT): $(fddi_tcp2_OBJECTS) $(fddi_tcp2_DEPENDENCIES) $(EXTRA_fddi_tcp2_DEPENDENCIES) 
	@rm -f fddi_tcp2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fddi_tcp2_OBJECTS) $(fddi_tcp2_LDADD) $(LIBS)

get_addr$(EXEEXT): $(get_addr_OBJECTS) $(get_addr_DEPENDENCIES) $(EXTRA_get_addr_DEPENDENCIES) 
	@rm -f get_addr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_addr_OBJECTS) $(get_addr_LDADD) $(LIBS)

gre$(EXEEXT): $(gre_OBJECTS) $(gre_DEPENDENCIES) $(EXTRA_gre_DEPENDENCIES) 
	@rm -f gre$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gre_OBJECTS) $(gre_LDADD) $(LIBS)

hsrp$(EXEEXT): $(hsrp_OBJECTS) $(hsrp_DEPENDENCIES) $(EXTRA_hsrp_DEPENDENCIES) 
	@rm -f hsrp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hsrp_OBJECTS) $(hsrp_LDADD) $(LIBS)

icmp6_echoreq$(EXEEXT): $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_DEPENDENCIES) $(EXTRA_icmp6_echoreq_DEPENDENCIES) 
	@rm -f icmp6_echoreq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_LDADD) $(LIBS)

icmp6_unreach$(EXEEXT): $(icmp6_unreach_OBJECTS) $(icmp6_unreach_DEPENDENCIES) $(EXTRA_icmp6_unreach_DEPENDENCIES) 
	@rm -f icmp6_unreach$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp6_unreach_OBJECTS) $(icmp6_unreach_LDADD) $(LIBS)

icmp_echo_cq$(EXEEXT): $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_DEPENDENCIES) $(EXTRA_icmp_echo_cq_DEPENDENCIES) 
	@rm -f icmp_echo_cq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_LDADD) $(LIBS)

icmp_redirect$(EXEEXT): $(icmp_redirect_OBJECTS) $(icmp_redirect_DEPENDENCIES) $(EXTRA_icmp_redirect_DEPENDENCIES) 
	@rm -f icmp_redirect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp_redirect_OBJECTS) $(icmp_redirect_LDADD) $(LIBS)

icmp_timeexceed$(EXEEXT): $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_DEPENDENCIES) $(EXTRA_icmp_timeexceed_DEPENDENCIES) 
	@rm -f icmp_timeexceed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_LDADD) $(LIBS)

icmp_timestamp$(EXEEXT): $(icmp_timestamp_OBJECTS) $(icmp_timestamp_DEPENDENCIES) $(EXTRA_icmp_timestamp_DEPENDENCIES) 
	@rm -f icmp_timestamp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp_timestamp_OBJECTS) $(icmp_timestamp_LDADD) $(LIBS)

icmp_unreach$(EXEEXT): $(icmp_unreach_OBJECTS) $(icmp_unreach_DEPENDENCIES) $(EXTRA_icmp_unreach_DEPENDENCIES) 
	@rm -f icmp_unreach$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icmp_unreach_OBJECTS) $(icmp_unreach_LDADD) $(LIBS)

ieee$(EXEEXT): $(ieee_OBJECTS) $(ieee_DEPENDENCIES) $(EXTRA_ieee_DEPENDENCIES) 
	@rm -f ieee$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ieee_OBJECTS) $(ieee_LDADD) $(LIBS)

ip_link$(EXEEXT): $(ip_link_OBJECTS) $(ip_link_DEPENDENCIES) $(EXTRA_ip_link_DEPENDENCIES) 
	@rm -f ip_link$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ip_link_OBJECTS) $(ip_link_LDADD) $(LIBS)

ip_raw$(EXEEXT): $(ip_raw_OBJECTS) $(ip_raw_DEPENDENCIES) $(EXTRA_ip_raw_DEPENDENCIES) 
	@rm -f ip_raw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ip_raw_OBJECTS) $(ip_raw_LDADD) $(LIBS)

isl$(EXEEXT): $(isl_OBJECTS) $(isl_DEPENDENCIES) $(EXTRA_isl_DEPENDENCIES) 
	@rm -f isl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(isl_OBJECTS) $(isl_LDADD) $(LIBS)

mpls$(EXEEXT): $(mpls_OBJECTS) $(mpls_DEPENDENCIES) $(EXTRA_mpls_DEPENDENCIES) 
	@rm -f mpls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mpls_OBJECTS) $(mpls_LDADD) $(LIBS)

ntp$(EXEEXT): $(ntp_OBJECTS) $(ntp_DEPENDENCIES) $(EXTRA_ntp_DEPENDENCIES) 
	@rm -f ntp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ntp_OBJECTS) $(ntp_LDADD) $(LIBS)

ospf_hello$(EXEEXT): $(ospf_hello_OBJECTS) $(ospf_hello_DEPENDENCIES) $(EXTRA_ospf_hello_DEPENDENCIES) 
	@rm -f ospf_hello$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ospf_hello_OBJECTS) $(ospf_hello_LDADD) $(LIBS)

ospf_lsa$(EXEEXT): $(ospf_lsa_OBJECTS) $(ospf_lsa_DEPENDENCIES) $(EXTRA_ospf_lsa_DEPENDENCIES) 
	@rm -f ospf_lsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ospf_lsa_OBJECTS) $(ospf_lsa_LDADD) $(LIBS)

ping_of_death$(EXEEXT): $(ping_of_death_OBJECTS) $(ping_of_death_DEPENDENCIES) $(EXTRA_ping_of_death_DEPENDENCIES) 
	@rm -f ping_of_death$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ping_of_death_OBJECTS) $(ping_of_death_LDADD) $(LIBS)

rpc_tcp$(EXEEXT): $(rpc_tcp_OBJECTS) $(rpc_tcp_DEPENDENCIES) $(EXTRA_rpc_tcp_DEPENDENCIES) 
	@rm -f rpc_tcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rpc_tcp_OBJECTS) $(rpc_tcp_LDADD) $(LIBS)

rpc_udp$(EXEEXT): $(rpc_udp_OBJECTS) $(rpc_udp_DEPENDENCIES) $(EXTRA_rpc_udp_DEPENDENCIES) 
	@rm -f rpc_udp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rpc_udp_OBJECTS) $(rpc_udp_LDADD) $(LIBS)

sebek$(EXEEXT): $(sebek_OBJECTS) $(sebek_DEPENDENCIES) $(EXTRA_sebek_DEPENDENCIES) 
	@rm -f sebek$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sebek_OBJECTS) $(sebek_LDADD) $(LIBS)

smurf$(EXEEXT): $(smurf_OBJECTS) $(smurf_DEPENDENCIES) $(EXTRA_smurf_DEPENDENCIES) 
	@rm -f smurf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(smurf_OBJECTS) $(smurf_LDADD) $(LIBS)

stp$(EXEEXT): $(stp_OBJECTS) $(stp_DEPENDENCIES) $(EXTRA_stp_DEPENDENCIES) 
	@rm -f stp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stp_OBJECTS) $(stp_LDADD) $(LIBS)

synflood$(EXEEXT): $(synflood_OBJECTS) $(synflood_DEPENDENCIES) $(EXTRA_synflood_DEPENDENCIES) 
	@rm -f synflood$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(synflood_OBJECTS) $(synflood_LDADD) $(LIBS)

synflood6$(EXEEXT): $(synflood6_OBJECTS) $(synflood6_DEPENDENCIES) $(EXTRA_synflood6_DEPENDENCIES) 
	@rm -f synflood6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(synflood6_OBJECTS) $(synflood6_LDADD) $(LIBS)

synflood6_frag$(EXEEXT): $(synflood6_frag_OBJECTS) $(synflood6_frag_DEPENDENCIES) $(EXTRA_synflood6_frag_DEPENDENCIES) 
	@rm -f synflood6_frag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(synflood6_frag_OBJECTS) $(synflood6_frag_LDADD) $(LIBS)

tcp1$(EXEEXT): $(tcp1_OBJECTS) $(tcp1_DEPENDENCIES) $(EXTRA_tcp1_DEPENDENCIES) 
	@rm -f tcp1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcp1_OBJECTS) $(tcp1_LDADD) $(LIBS)

tcp2$(EXEEXT): $(tcp2_OBJECTS) $(tcp2_DEPENDENCIES) $(EXTRA_tcp2_DEPENDENCIES) 
	@rm -f tcp2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcp2_OBJECTS) $(tcp2_LDADD) $(LIBS)

test_ipv4$(EXEEXT): $(test_ipv4_OBJECTS) $(test_ipv4_DEPENDENCIES) $(EXTRA_test_ipv4_DEPENDENCIES) 
	@rm -f test_ipv4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ipv4_OBJECTS) $(test_ipv4_LDADD) $(LIBS)

test_ipv4_options$(EXEEXT): $(test_ipv4_options_OBJECTS) $(test_ipv4_options_DEPENDENCIES) $(EXTRA_test_ipv4_options_DEPENDENCIES) 
	@rm -f test_ipv4_options$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ipv4_options_OBJECTS) $(test_ipv4_options_LDADD) $(LIBS)

test_ipv6_icmpv4$(EXEEXT): $(test_ipv6_icmpv4_OBJECTS) $(test_ipv6_icmpv4_DEPENDENCIES) $(EXTRA_test_ipv6_icmpv4_DEPENDENCIES) 
	@rm -f test_ipv6_icmpv4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ipv6_icmpv4_OBJECTS) $(test_ipv6_icmpv4_LDADD) $(LIBS)

tftp$(EXEEXT): $(tftp_OBJECTS) $(tftp_DEPENDENCIES) $(EXTRA_tftp_DEPENDENCIES) 
	@rm -f tftp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tftp_OBJECTS) $(tftp_LDADD) $(LIBS)

tring_tcp1$(EXEEXT): $(tring_tcp1_OBJECTS) $(tring_tcp1_DEPENDENCIES) $(EXTRA_tring_tcp1_DEPENDENCIES) 
	@rm -f tring_tcp1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tring_tcp1_OBJECTS) $(tring_tcp1_LDADD) $(LIBS)

tring_tcp2$(EXEEXT): $(tring_tcp2_OBJECTS) $(tring_tcp2_DEPENDENCIES) $(EXTRA_tring_tcp2_DEPENDENCIES) 
	@rm -f tring_tcp2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tring_tcp2_OBJECTS) $(tring_tcp2_LDADD) $(LIBS)

udp1$(EXEEXT): $(udp1_OBJECTS) $(udp1_DEPENDENCIES) $(EXTRA_udp1_DEPENDENCIES) 
	@rm -f udp1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(udp1_OBJECTS) $(udp1_LDADD) $(LIBS)

udp2$(EXEEXT): $(udp2_OBJECTS) $(udp2_DEPENDENCIES) $(EXTRA_udp2_DEPENDENCIES) 
	@rm -f udp2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(udp2_OBJECTS) $(udp2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
